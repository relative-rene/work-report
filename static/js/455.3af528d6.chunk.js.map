{"version":3,"file":"static/js/455.3af528d6.chunk.js","mappings":"mJACA,MAcA,EAdkBA,IAAqB,IAApB,KAAEC,EAAI,KAAEC,GAAMF,EAC7B,MAAMG,EAAaF,IAAQG,EAAAA,EAAAA,KAAA,MAAAC,SAAKC,OAAOJ,KAAKD,GAAMM,KAAI,CAACC,EAAKC,MACpDP,EAAKM,KACEJ,EAAAA,EAAAA,KAAA,MAAAC,SAAyBH,EAAKM,IAAQ,IAAE,GAAAE,OAA5BF,GAAGE,QAAID,QAIlC,OACIL,EAAAA,EAAAA,KAAA,SAAOO,UAAU,YAAWN,SACvBF,GAAc,IACX,E,aCThB,MAoBA,EApBkBH,IAA+B,IAA9B,KAAEC,EAAI,SAAEW,EAAQ,KAAEV,GAAMF,EACvC,MAAMa,GAAWC,EAAAA,EAAAA,MAIXC,EAAUd,GAAQA,EAAKM,KAAKS,IACtBZ,EAAAA,EAAAA,KAAA,MAAoBa,QAASA,KAAMC,OAJ5BC,EAIsCP,EAAWI,EAAMI,SAHtEP,EAASM,GADMA,KAI4D,EAAAd,SAAEC,OAAOe,QAAQL,GAAOT,KAAI,CAAAe,EAAYb,KAAO,IAAjBc,EAAIf,GAAIc,EAC7G,QAAIpB,EAAKsB,eAAeD,KACbnB,EAAAA,EAAAA,KAAA,MAAAC,SAAyBG,GAAM,KAAG,GAAAE,OAAtBF,GAAGE,QAAID,GAElB,KAJCO,EAAMI,OAO3B,OACIhB,EAAAA,EAAAA,KAAA,SAAOO,UAAU,YAAWN,SACvBU,GACG,ECChB,EAfcf,IAAmD,IACzDyB,GADO,UAAEC,EAAS,OAAEC,EAAM,SAAEf,EAAQ,KAAEV,EAAI,MAAE0B,GAAO5B,EAOvD,OAJIyB,EADAE,GAAUA,EAAOE,SAAS,QACbH,EAAUI,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKF,EAAEJ,IAAW,IAAIM,KAAKD,EAAEL,MAE1DD,EAAUI,MAAK,CAACC,EAAGC,IAAMD,EAAEJ,GAAUK,EAAEL,IAAW,EAAI,KAGnEO,EAAAA,EAAAA,MAAA,SAAOvB,UAAS,SAAAD,OAAWkB,GAAQvB,SAAA,EAC/BD,EAAAA,EAAAA,KAAC+B,EAAS,CAAClC,KAAMwB,EAAW,IAAM,GAAIvB,KAAMA,KAC5CE,EAAAA,EAAAA,KAACgC,EAAS,CAACxB,SAAUA,EAAUX,KAAMwB,GAAc,GAAIvB,KAAMA,MACzD,C","sources":["components/UI/TableHead.jsx","components/UI/TableBody.jsx","components/UI/Table.jsx"],"sourcesContent":["\nconst TableHead = ({ data, keys }) => {\n    const categories = data && <tr>{Object.keys(data).map((val, i) => {\n        if (keys[val]) {\n            return <th key={`${val}${-i}`}>{keys[val] || ''}</th>\n        }\n        return false;\n    })}</tr>;\n    return (\n        <thead className=\"TableHead\">\n            {categories || ''}\n        </thead>\n    );\n}\n\nexport default TableHead;","import { useNavigate } from 'react-router-dom';\n\nconst TableBody = ({ data, editPath, keys }) => {\n    const navigate = useNavigate();\n    const editEntry = (path) => {\n        navigate(path);\n    }\n    const display = data && data.map((entry) => {\n        return (<tr key={entry._id} onClick={() => editEntry(editPath + entry._id)}>{Object.entries(entry).map(([key,val], i) => {\n            if (keys.hasOwnProperty(key)) {\n                return <td key={`${val}${-i}`}>{val|| '-'}</td>\n            }\n            return false;\n        })}</tr>);\n    });\n    return (\n        <tbody className=\"TableBody\">\n            {display}\n        </tbody>\n    )\n}\n\nexport default TableBody;","\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\n\nconst Table = ({ tableData, sortBy, editPath, keys, tName }) => {\n    let sortedData;\n    if (sortBy && sortBy.includes('date')) {\n        sortedData = tableData.sort((a, b) => new Date(a[sortBy]) - new Date(b[sortBy]));\n    } else {\n        sortedData = tableData.sort((a, b) => a[sortBy] < b[sortBy] ? -1 : 1);\n    }\n    return (\n        <table className={`Table ${tName}`}>\n            <TableHead data={sortedData[0] || []} keys={keys} />\n            <TableBody editPath={editPath} data={sortedData || []} keys={keys} />\n        </table>\n    )\n}\n\nexport default Table;"],"names":["_ref","data","keys","categories","_jsx","children","Object","map","val","i","concat","className","editPath","navigate","useNavigate","display","entry","onClick","editEntry","path","_id","entries","_ref2","key","hasOwnProperty","sortedData","tableData","sortBy","tName","includes","sort","a","b","Date","_jsxs","TableHead","TableBody"],"sourceRoot":""}