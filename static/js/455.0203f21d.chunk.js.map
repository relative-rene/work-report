{"version":3,"file":"static/js/455.0203f21d.chunk.js","mappings":"oKACA,MAcA,EAdkBA,IAAiC,IAAhC,KAAEC,EAAI,KAAEC,EAAI,WAAEC,GAAYH,EACzC,MAAMI,EAAaH,IAAQI,EAAAA,EAAAA,KAAA,MAAAC,SAAKC,OAAOL,KAAKD,GAAMO,KAAI,CAACC,EAAKC,MACpDR,EAAKO,KACEJ,EAAAA,EAAAA,KAAA,MAAIM,QAASA,IAAIR,EAAWD,EAAKO,IAAMH,SAAsBJ,EAAKO,IAAQ,IAAE,GAAAG,OAA5BH,GAAGG,QAAIF,QAItE,OACIL,EAAAA,EAAAA,KAAA,SAAOQ,UAAU,YAAWP,SACvBF,GAAc,cACX,E,aCThB,MAoBA,EApBkBJ,IAA+B,IAA9B,KAAEC,EAAI,SAAEa,EAAQ,KAAEZ,GAAMF,EACvC,MAAMe,GAAWC,EAAAA,EAAAA,MAIXC,EAAUhB,GAAQA,EAAKO,KAAKU,IACtBb,EAAAA,EAAAA,KAAA,MAAoBM,QAASA,KAAMQ,OAJ5BC,EAIsCN,EAAWI,EAAMG,SAHtEN,EAASK,GADMA,KAI4D,EAAAd,SAAEC,OAAOe,QAAQJ,GAAOV,KAAI,CAAAe,EAAYb,KAAO,IAAjBc,EAAIf,GAAIc,EAC7G,QAAIrB,EAAKuB,eAAeD,KACbnB,EAAAA,EAAAA,KAAA,MAAAC,SAAyBG,GAAM,KAAG,GAAAG,OAAtBH,GAAGG,QAAIF,GAElB,KAJCQ,EAAMG,OAO3B,OACIhB,EAAAA,EAAAA,KAAA,SAAOQ,UAAU,YAAWP,SACvBW,GACG,EC2BhB,EAzCcjB,IAAiE,IAAhE,UAAE0B,EAAS,OAAEC,EAAM,SAAEb,EAAQ,KAAEZ,EAAI,MAAE0B,EAAK,aAAEC,GAAc7B,EAErE,MAAO8B,EAAUC,IAAeC,EAAAA,EAAAA,UAASH,IAClCI,EAAYC,IAAiBF,EAAAA,EAAAA,UAASN,GAWvCS,EAAWA,CAACC,EAAcC,KAC5BN,GAAWO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAQ,IAAE,CAACM,IAAgBN,EAASM,MACjDA,GAAgBA,EAAaG,SAAS,QAElCL,EADAG,EACcX,EAAUc,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKF,EAAEL,IAAiB,IAAIO,KAAKD,EAAEN,MAEhEV,EAAUc,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEN,IAAiB,IAAIO,KAAKF,EAAEL,OAG9EF,EADAG,EACcX,EAAUc,MAAK,CAACC,EAAGC,IAAMD,EAAEL,GAAgBM,EAAEN,IAAiB,EAAI,IAElEV,EAAUc,MAAK,CAACC,EAAGC,IAAMD,EAAEL,GAAgBM,EAAEN,IAAiB,EAAI,IAExF,EAMJ,OAHAQ,EAAAA,EAAAA,YAAU,KACNT,EAASR,EAAQG,EAASH,GAAQ,GACpC,CAACD,KAECmB,EAAAA,EAAAA,MAAA,SAAOhC,UAAS,SAAAD,OAAWgB,GAAQtB,SAAA,EAC/BD,EAAAA,EAAAA,KAACyC,EAAS,CAAC3C,WA9BSM,IACxB,IAAIsC,EAAWxC,OAAOe,QAAQpB,GAAM8C,MAAKzB,IAAmB,IAAjBC,EAAKyB,GAAM1B,EAClD,GAAI0B,IAAUxC,EACV,OAAOe,CACX,IAEJW,EAASY,EAAS,GAAIjB,EAASiB,EAAS,IAAI,EAwBG9C,KAAMgC,EAAaA,EAAW,GAAK,GAAI/B,KAAMA,KACxFG,EAAAA,EAAAA,KAAC6C,EAAS,CAACpC,SAAUA,EAAUb,KAAMgC,GAAc,GAAI/B,KAAMA,MACzD,C","sources":["components/UI/TableHead.jsx","components/UI/TableBody.jsx","components/UI/Table.jsx"],"sourcesContent":["\nconst TableHead = ({ data, keys, selectHead }) => {\n    const categories = data && <tr>{Object.keys(data).map((val, i) => {\n        if (keys[val]) {\n            return <th onClick={()=>selectHead(keys[val])} key={`${val}${-i}`}>{keys[val] || ''}</th>\n        }\n        return false;\n    })}</tr>;\n    return (\n        <thead className=\"TableHead\">\n            {categories || '...Loading'}\n        </thead>\n    );\n}\n\nexport default TableHead;","import { useNavigate } from 'react-router-dom';\n\nconst TableBody = ({ data, editPath, keys }) => {\n    const navigate = useNavigate();\n    const editEntry = (path) => {\n        navigate(path);\n    }\n    const display = data && data.map((entry) => {\n        return (<tr key={entry._id} onClick={() => editEntry(editPath + entry._id)}>{Object.entries(entry).map(([key,val], i) => {\n            if (keys.hasOwnProperty(key)) {\n                return <td key={`${val}${-i}`}>{val|| '-'}</td>\n            }\n            return false;\n        })}</tr>);\n    });\n    return (\n        <tbody className=\"TableBody\">\n            {display}\n        </tbody>\n    )\n}\n\nexport default TableBody;","import { useEffect, useState } from 'react';\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\n\nconst Table = ({ tableData, sortBy, editPath, keys, tName, initSortHash }) => {\n\n    const [sortHash, setSortHash] = useState(initSortHash);\n    const [sortedData, setSortedData] = useState(tableData)\n\n    const handleSelectedHead = (val) => {\n        let selected = Object.entries(keys).find(([key, value]) => {\n            if (value === val) {\n                return key\n            }\n        });\n        onSortBy(selected[0], sortHash[selected[0]]);\n    }\n\n    const onSortBy = (filterHeader, upOrDown) => {\n        setSortHash({ ...sortHash, [filterHeader]: !sortHash[filterHeader] });\n        if (filterHeader && filterHeader.includes('date')) {\n            if (upOrDown) {\n                setSortedData(tableData.sort((a, b) => new Date(a[filterHeader]) - new Date(b[filterHeader])));\n            } else {\n                setSortedData(tableData.sort((a, b) => new Date(b[filterHeader]) - new Date(a[filterHeader])));            }\n        } else {\n            if (upOrDown) {\n                setSortedData(tableData.sort((a, b) => a[filterHeader] < b[filterHeader] ? -1 : 1));\n            } else {\n                setSortedData(tableData.sort((a, b) => a[filterHeader] > b[filterHeader] ? -1 : 1));\n            }\n        }\n    }\n\n    useEffect(()=>{\n        onSortBy(sortBy, sortHash[sortBy])\n    },[tableData])\n    return (\n        <table className={`Table ${tName}`}>\n            <TableHead selectHead={handleSelectedHead} data={sortedData ? sortedData[0] : []} keys={keys} />\n            <TableBody editPath={editPath} data={sortedData || []} keys={keys} />\n        </table>\n    );\n}\n\nexport default Table;"],"names":["_ref","data","keys","selectHead","categories","_jsx","children","Object","map","val","i","onClick","concat","className","editPath","navigate","useNavigate","display","entry","editEntry","path","_id","entries","_ref2","key","hasOwnProperty","tableData","sortBy","tName","initSortHash","sortHash","setSortHash","useState","sortedData","setSortedData","onSortBy","filterHeader","upOrDown","_objectSpread","includes","sort","a","b","Date","useEffect","_jsxs","TableHead","selected","find","value","TableBody"],"sourceRoot":""}